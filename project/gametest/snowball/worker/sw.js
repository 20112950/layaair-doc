var CACHE_VERSION=null,Curr_CACHES=null,urlsToCache=null;self.addEventListener("message",function(e){if(console.log("sw Handling message event:",e),e.data&&(console.log("------>sw port2 service worker接收到主线程发送的版本号: "+e.data.verNum),CACHE_VERSION=e.data.verNum,Curr_CACHES={ver:CACHE_VERSION},urlsToCache="/"+CACHE_VERSION,console.log("sw 设置当前缓存版本号: "+Curr_CACHES.ver),e.ports[0].postMessage({msg:urlsToCache}),Curr_CACHES)){var r=Object.keys(Curr_CACHES).map(function(e){return Curr_CACHES[e]});e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){-1===r.indexOf(e)&&(console.log("删除过期缓存: ",e),caches["delete"](e),self.clients.claim())}))}))}}),self.addEventListener("install",function(e){self.skipWaiting()}),self.addEventListener("activate",function(e){console.log("sw activate")}),self.addEventListener("fetch",function(e){console.log("fetch caches----------------------"),urlsToCache&&-1!=e.request.url.indexOf(urlsToCache)&&e.respondWith(caches.match(e.request).then(function(r){if(r)return r;var n=e.request.clone();return fetch(n).then(function(r){if(!r||200!==r.status||"basic"!==r.type)return r;var n=r.clone();return Curr_CACHES&&Curr_CACHES.ver&&caches.open(Curr_CACHES.ver).then(function(r){r.put(e.request,n)}),r})}))});